## Sample configuration properties for the Gobblin AWS cluster launcher

## AWS cluster configuration
gobblin.aws.cluster.name=GobblinAWS
# This must not be changed until logic for determining appWorkDir is not made generic
gobblin.aws.nfs.parent.dir=/home/ec2-user
gobblin.cluster.helix.cluster.name=GobblinAWS
gobblin.cluster.zk.connection.string=<ZK Uri eg. "localhost:2181">
# TODO: Handle job conf path
gobblin.cluster.job.conf.path=<path where Gobblin job configuration file are located>
gobblin.aws.email.notification.on.shutdown=false

## AWS Configuration
gobblin.aws.region=us-west-2
gobblin.aws.service.access=<Your AWS access key>
gobblin.aws.service.secret=<Your AWS secret key>
gobblin.aws.client.assume.role=false
gobblin.aws.client.role.arn=<Role ARN is client assume role is true>
gobblin.aws.client.external.id=<External ID is client assume role is true>
gobblin.aws.client.session.id=<Session ID is client assume role is true>
gobblin.aws.credentails.refresh.interval.minutes=720

## AWS Master config
gobblin.aws.master.ami.id=i-22
gobblin.aws.master.instance.type="m3.medium"
gobblin.aws.master.jvm.args="-XX:ReservedCodeCacheSize=100M -XX:MaxMetaspaceSize=256m -XX:CompressedClassSpaceSize=256m"
gobblin.aws.master.jvm.memory=3G
# Master jars location is tied closely to AMI being used. Only change if you know what you are doing
gobblin.aws.master.jars=/var/gobblin/master/lib
# Change to S3 URI where your cluster conf is uploaded
gobblin.aws.master.conf.s3.uri="s3://something/something"

## AWS Worker config
gobblin.aws.worker.ami.id=i-22
gobblin.aws.worker.instance.type="m3.medium"
gobblin.aws.worker.jvm.args="-XX:ReservedCodeCacheSize=100M -XX:MaxMetaspaceSize=256m -XX:CompressedClassSpaceSize=256m"
gobblin.aws.worker.jvm.memory=3G
# Worker jars location is tied closely to AMI being used. Only change if you know what you are doing
gobblin.aws.worker.jars=/var/gobblin/worker/lib
# Change to S3 URI where your cluster conf is uploaded
gobblin.aws.worker.conf.s3.uri=<S3 location where application.conf, quartz.properties and log4j-aws.properties are uploaded>
gobblin.aws.min.workers=1
gobblin.aws.max.workers=5
gobblin.aws.desired.workers=2

## Various directories
gobblin.aws.conf.dir=${gobblin.aws.nfs.parent.dir}"/cluster-conf"
gobblin.aws.master.conf.local=${gobblin.aws.conf.dir}"/log4j-aws.properties,"${gobblin.aws.conf.dir}"/application.conf"
gobblin.aws.worker.conf.local=${gobblin.aws.master.conf.local}
# Lib jars location is tied closely to AMI being used. Only change if you know what you are doing
gobblin.aws.lib.jars.dir=/var/gobblin/dist/lib
gobblin.aws.logs.sink.root.dir=${gobblin.aws.nfs.parent.dir}"/logs"
gobblin.aws.work.dir=${gobblin.aws.nfs.parent.dir}"/work-dir"

## File system URIs
fs.uri="file:///"
writer.fs.uri=${fs.uri}
state.store.fs.uri=${fs.uri}

## Writer related configuration properties
writer.destination.type=HDFS
writer.output.format=AVRO
writer.staging.dir=${gobblin.aws.work.dir}/task-staging
writer.output.dir=${gobblin.aws.work.dir}/task-output

## Data publisher related configuration properties
data.publisher.type=gobblin.publisher.BaseDataPublisher
data.publisher.final.dir=${gobblin.aws.work.dir}/job-output
data.publisher.replace.final.dir=false

## Directory where job/task state files are stored
state.store.dir=${gobblin.aws.work.dir}/state-store

## Directory where error files from the quality checkers are stored
qualitychecker.row.err.file=${gobblin.aws.work.dir}/err

## Disable job locking for now
job.lock.enabled=false

## Directory where job locks are stored
job.lock.dir=${gobblin.aws.work.dir}/locks

## Directory where metrics log files are stored
metrics.log.dir=${gobblin.aws.work.dir}/metrics

## Interval of task state reporting in milliseconds
task.status.reportintervalinms=1000

## Enable metrics / events
metrics.enabled=true
